{"version":3,"sources":["../../src/pages/friends-page/friends-page.module.ts","../../src/pages/friends-page/friends-page.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FriendsPage } from './friends-page';\n\n@NgModule({\n  declarations: [\n    FriendsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FriendsPage),\n  ],\n  exports: [\n    FriendsPage\n  ]\n})\nexport class FriendsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends-page/friends-page.module.ts","import { Component, NgZone } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { IonicPage, NavController, NavParams, ActionSheetController, AlertController,\n         ModalController, Events } from 'ionic-angular';\nimport 'rxjs/add/operator/debounceTime';\n\nimport { ProfileModal }     from '../../components/profile-modal/profile-modal';\nimport { CourtDataService } from '../../services/courtDataService.service';\n\nimport { Keyboard } from '@ionic-native/keyboard';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-friends-page',\n  templateUrl: 'friends-page.html',\n})\nexport class FriendsPage {\n\n\n  // Friends and requests recieved from profile page\n  friends: Array<any>;\n  // Friend Request User Objects\n  friendRequests: Array<any>;\n  // Pointers to friend request user objects\n  requestPointers: Array<string>\n  gotFriendRequests: boolean;\n\n  friendLoading: boolean = true;\n  addLoading: boolean = false;\n  requestsLoading: boolean = true;\n\n  // So that when we filter friends we do not lose values that were filtered out\n  friendsShowing: Array<any>;\n\n  // the results from querying our server for friends to add\n  addResults: Array<any>;\n\n  // the search queries for adding friends\n  friendSearchTerm: string = '';\n  addSearchTerm: string = '';\n  // Form Controls\n  friendSearchControl: FormControl;\n  addSearchControl: FormControl;\n\n  // Which tab is currently showing\n  showing: string;\n\n  //whether or not we are viewing the profile of the user currently logged in\n  myProfile: boolean;\n\n  constructor(public navCtrl: NavController,\n              public params: NavParams,\n              public actionSheetCtrl: ActionSheetController,\n              public courtDataService: CourtDataService,\n              public alertCtrl: AlertController,\n              public modalCtrl: ModalController,\n              public events: Events,\n              public zone: NgZone,\n              public keyboard: Keyboard)\n  {\n\n    this.requestPointers = params.get('friendRequests');\n    this.gotFriendRequests = false;\n    // Whether or not we are viewing the current user's profile\n    this.myProfile = params.get('myProfile');\n\n    // Call the server, set friends, friends showing and friend requests\n    this.getFriends(params.get('friends'))\n    this.getFriendRequests(params.get('friendRequests'))\n\n    //this.addResults = this.friends;\n    this.showing = 'friends';\n\n    this.friendSearchControl = new FormControl;\n    this.addSearchControl = new FormControl\n  }\n\n\n  ionViewDidLoad(){\n    // wait 700ms before triggering a search so that we don't search on every keystroke\n    this.friendSearchControl.valueChanges.debounceTime(10).subscribe(search => {\n      this.friendsShowing = this.filterFriends(this.friendSearchTerm);\n    });\n\n    // This observable controls the moment at which we ask the server for friends to add\n    this.addSearchControl.valueChanges.debounceTime(500).subscribe(search => {\n      if (search === '') {\n        this.addResults = [];\n        return;\n      }\n      this.addLoading = true;\n      this.courtDataService.getUsersByName(this.addSearchTerm).subscribe(\n        res => {\n          this.addResults = res.json()\n          this.addLoading = false;\n          // close keyboard if many people are returned\n          if(res.json().length > 5) this.keyboard.close();\n        },\n        err => this.courtDataService.notify('Error', err)\n      );\n    });\n\n    this.events.subscribe('updateCurrentUser', (user) => {\n        this.getFriends(user.friends);\n    })\n\n    // Load wheel, updateCurrentUser event soon to follow\n    this.events.subscribe('removingFriend', () => {\n      this.zone.run(() => {\n        this.friendLoading = true;\n      })\n    })\n  }\n\n\n  // Post: friends and friends showing set to friends retrieved\n  // Param: array of ids of friends to be retreived\n  public getFriends(friend_ids: Array<string>){\n    // Call the server, set friends and friends showing\n    this.courtDataService.getUsers(friend_ids).subscribe(\n      res => {\n        this.friends = res.json();\n        this.zone.run(() => {\n          this.friendsShowing = res.json();\n          this.friendLoading = false;\n        })\n        this.friendLoading = false;\n      },\n      err => { this.courtDataService.notify('Error', err) },\n    )\n  }\n\n\n  // Post: Freind Requests set to usere retreived, got friend requests becomes true\n  public getFriendRequests(ids: Array<string>){\n    this.courtDataService.getUsers(ids).subscribe(\n      res => {\n        this.friendRequests = res.json();\n        this.gotFriendRequests = true;\n        this.requestsLoading = false;\n      },\n      err => { this.courtDataService.notify('Error', err)},\n    )\n  }\n\n\n  // Post 1: this.showing becomes requests\n  // Post 2: Gets friend requests if we aven't already\n  public requestTabTapped(){\n    this.showing = 'requests';\n    if (this.gotFriendRequests) return;\n    this.getFriendRequests(this.requestPointers);\n  }\n\n\n\n\n  // Post:  friendsShowing becomes a filtered version of friends\n  // Param: string to filter by\n  // Returns: filtered version of this.friends\n  private filterFriends(searchTerm: string){\n\n    return this.friends.filter((profile) => {\n      // Return true if item matches the searchterm(both lowercased)\n      let name = profile.fName + \" \" + profile.nName + \" \" + profile.lName;\n      return name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\n    })\n  }\n\n  // Post:  DB is queried for users whose names match the searchterm.\n  public addSearch(){\n    // If searchterm is blank don't query the db\n    if(this.addSearchTerm === '')\n      this.addResults = [];\n    // Below is only temporary\n    else\n      this.addResults = this.filterFriends(this.addSearchTerm);\n  }\n\n  // Post:  profile page is pulled up with the clicked friend's profile\n  // Param: user - the user whose page we will pull up\n  public presentProfile(user: any){\n    this.modalCtrl.create(ProfileModal, {\n      user: user,\n      myProfile: false\n    }).present()\n  }\n\n  alreadyFriendsAlert(user: any) {\n    let alert = this.alertCtrl.create({\n      subTitle: user.fName + ' ' + user.lName + ' is already your friend',\n      buttons: ['Dismiss']\n    }).present();\n  }\n  requestedYouAlert(user: any) {\n    let alert = this.alertCtrl.create({\n      subTitle: user.fName + ' ' + user.lName + ' has already requested you',\n      buttons: ['Dismiss']\n    }).present();\n  }\n\n  // Confirming a friend request\n  // Post:  Action sheet displaying friend request options is presented\n  // Param: user - the user to be potentially added\n  public confirmRequestSheet(user: any){\n    let action = this.actionSheetCtrl.create({\n      title: 'Confirm ' + user.fName + \" \" + user.lName + \"?\",\n      buttons: [\n        { text: 'Add Friend',\n          handler: () => {\n            // load wheel, get updated user\n            this.requestsLoading = true;\n            this.courtDataService.confirmFriendRequest('currentUser', user._id).subscribe(\n              res => {\n                // Update currentUser, pull added user from requests & requestPointers\n                this.events.publish('updateCurrentUser', res.json()[0])\n                this.friendRequests.splice(this.friendRequests.indexOf(user), 1);\n                this.requestPointers.splice(this.requestPointers.indexOf(user._id), 1)\n                this.requestsLoading = false;\n              },\n              err => {this.courtDataService.notify('Error', err)}\n            );\n          }\n        },\n        // Nav to user's profile\n        { text: 'View Profile',\n        handler: () =>{\n          this.presentProfile(user);\n        }\n      },\n      { text: 'cancel', role: 'cancel' }\n      ]\n    })\n\n    action.present();\n  }\n\n  // Post:  showing is switched to the given parameter\n  // Param: string switchTo - the string which we will switch showing to\n  // Pre:   switchTo is either 'friends' 'add' or 'requests'\n  public tabSwitch(switchTo: string){\n    this.showing = switchTo;\n  }\n\n  // Post user data is refreshed and saved, refresher stops spinning\n  public doRefresh(refresher: any){\n    this.courtDataService.getUsersByAuth_id(JSON.parse(window.localStorage.getItem('currentUser')).auth_id)\n    .subscribe(res => {\n      this.events.publish('updateCurrentUser', res.json())\n      this.getFriendRequests(res.json().friendRequests);\n      refresher.complete()\n    },\n    err => {\n      this.courtDataService.notify('Error', 'Error refreshing user data'),\n      refresher.complete()\n    })\n  }\n\n\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends-page/friends-page.ts"],"sourceRoot":""}